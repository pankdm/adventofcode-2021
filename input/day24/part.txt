Input state: z

inp w
(0) mul x 0 // x = 0  
(1) add x z // x = x + z
(2) mod x 26 // x = x % 26
(3) div z -->  1   1   1   26  1   1   26  1   26  1   26  26  26  26 // z /= 1 || z /= 26
(4) add x -->  11  12  10  -8  15  15  -11 10  -3  15  -3  -1  -10 -16 // x = x + A
(5) eql x w // if x == w: x = 1 else x = 0
(6) eql x 0 // if x == 0: x = 1 else x = 0
(7) mul y 0 // y = 0
(8) add y 25 // y = y + 25
(9) mul y x // y = y * x
(10) add y 1 // y = y + 1
(11) mul z y // z = z * y
(12) mul y 0 // y = 0
(13) add y w // y = y + w
(14) add y -->  8   8   12  10  2   8   4   9   10  3   7   7   2   2 // y = y + B
(15) mul y x // y = y * x
(16) add z y // z = z + y

==>

1)
x = 0  
x = x + z
x = x % 26
z /= 1 || z /= 26
x = x + A  // A = [11  12  10  -8  15  15  -11 10  -3  15  -3  -1  -10 -16]
if x == w: x = 1 else x = 0
if x == 0: x = 1 else x = 0

y = 0
y = y + 25
y = y * x
y = y + 1
z = z * y

y = 0
y = y + w
y = y + B // B = [8   8   12  10  2   8   4   9   10  3   7   7   2   2]
y = y * x
z = z + y


2)
Carry-on state: "z"
Input: "w"

x = z % 26 + b // b = [11  12  10  -8  15  15  -11 10  -3  15  -3  -1  -10 -16]
z /= a // a = [1   1   1   26  1   1   26  1   26  1   26  26  26  26]
if x == w {
} else {
    z *= 26
    z += (w + c) // c = [8   8   12  10  2   8   4   9   10  3   7   7   2   2]
}


Execution
w1:
x = 11 (!= w1)
z = (w1 + 8)

w2:
x = w1 + 8 + 12 (!= w2)
z = 26 * (w1 + 8) + (w2 + 8)

w3:
x = w2 + 8 + 10 (!= w3)
z = 26 * (26 * (w1 + 8) + (w2 + 8)) + w3 + 12

w4:
x = w3 + 12 - 8 = w3 + 4 (maybe = w4)
a) w3 = w4 + 4:
z = 26 * (w1 + 8) + (w2 + 8)


b) w3 != w4 + 4:
z = 26 * (26 * (26 * (w1 + 8) + (w2 + 8)) + w3 + 12) + w4 + 10
